{
  "openapi": "3.0.1",
  "info": {
    "title": "RentalManagement API",
    "description": "An ASP.NET Core Web API for managing rentals",
    "version": "v1"
  },
  "paths": {
    "/api/Authentication/Register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/Login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/RefreshToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authentication/Logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Places": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Get all places",
        "responses": {
          "200": {
            "description": "The places were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Places"
        ],
        "summary": "Creates a new place",
        "requestBody": {
          "description": "The place to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaceDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaceDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaceDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The place was created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to create a place.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The place is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Places/{placeId}": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Gets a place by its ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The place was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              }
            }
          },
          "404": {
            "description": "The place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Places"
        ],
        "summary": "Updates a place by ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated information of the place",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlaceDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlaceDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlaceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The place was updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDTO"
                }
              }
            }
          },
          "400": {
            "description": "The place is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to update this place.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Places"
        ],
        "summary": "Deletes a place by ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "Place to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The place was deleted."
          },
          "403": {
            "description": "You are not allowed to delete this place.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Places/{placeId}/Reservations": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Gets all Reservations for a specific Place",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place to get reservations from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Reservations were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservationDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Creates a new Reservation",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place to create reservation on",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Reservation information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Reservation was created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              }
            }
          },
          "400": {
            "description": "The Reservation is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to create a reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The reservation dates overlap with an existing confirmed reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Places/{placeId}/Reservations/{reservationId}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Gets a Reservation by ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place to get reservation from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the reservation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Reservation was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              }
            }
          },
          "404": {
            "description": "The Place or Reservation was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Updates a Reservation by ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place that the reservation is a part of",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the reservation to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated reservation information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Reservation was updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDTO"
                }
              }
            }
          },
          "400": {
            "description": "The updated Reservation is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to update this reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to update this reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Reservation and/or Place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "The updated Reservation is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Deletes a Reservation by its ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place that the reservation is a part of",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the reservation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Reservation was deleted."
          },
          "400": {
            "description": "The Reservation does not belong to the specified place.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to delete this reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to delete this reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Reservation and/or the place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Places/{placeId}/Reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Gets all Reviews for a specific Place",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Reviews were found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The Place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Places/{placeId}/Reservations/{reservationId}/Reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Gets a Review by the Reservation ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the reservation's place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the reservation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Review was found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          },
          "404": {
            "description": "The Review or Place was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Creates a new Review",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the place that the reservation was made in",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the reservation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Review details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Review was created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          },
          "400": {
            "description": "The Review is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to create a review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "A review for this reservation already exists.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Place or Reservation was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Places/{placeId}/Reservations/{reservationId}/Reviews/{reviewId}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Updates a Review by ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the review's place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the review's reservation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "ID of the review",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated review information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Review was updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          },
          "400": {
            "description": "The Review is invalid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to update this review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to update this review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Review was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Deletes a Review by its ID",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "description": "ID of the review's place",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of the review's reservation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "ID of the review",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Review was deleted."
          },
          "400": {
            "description": "The Review does not belong to the specified reservation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorized to delete this review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to delete this review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The Review was not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePlaceDTO": {
        "type": "object",
        "properties": {
          "roomsCount": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "example": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "example": "1234 Main St, Springfield, IL 62701"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Beautiful place with a view of the park"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 1000
          }
        },
        "additionalProperties": false
      },
      "CreateReservationDTO": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00Z"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00Z"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 100
          }
        },
        "additionalProperties": false
      },
      "CreateReviewDTO": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "example": "Great place!"
          }
        },
        "additionalProperties": false
      },
      "LoginUserDTO": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "JohnDoe"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "password123"
          }
        },
        "additionalProperties": false
      },
      "PlaceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "roomsCount": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "example": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "example": "1234 Main St, Springfield, IL 62701"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Beautiful place with a view of the park"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserDTO": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "JohnDoe"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "example": "JohnDoe@email.com"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "example": [
              "Tennant",
              "Owner"
            ]
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "password123"
          }
        },
        "additionalProperties": false
      },
      "ReservationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "placeId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "example": "Pending"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "place": {
            "$ref": "#/components/schemas/PlaceDTO"
          },
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          }
        },
        "additionalProperties": false
      },
      "ReviewDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "reservationId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "example": "Great place!"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "UpdatePlaceDTO": {
        "type": "object",
        "properties": {
          "roomsCount": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "example": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "example": "1234 Main St, Springfield, IL 62701"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Beautiful place with a view of the park"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 100
          }
        },
        "additionalProperties": false
      },
      "UpdateReservationDTO": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00Z"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-01T00:00:00Z"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "example": "Pending"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 100
          }
        },
        "additionalProperties": false
      },
      "UpdateReviewDTO": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "format": "int32",
            "example": 5
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "example": "Great place!"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}